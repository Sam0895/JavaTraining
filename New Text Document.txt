import java.util.LinkedList;

public class ShoppingCart {
    private LinkedList<String> cart;

    public ShoppingCart() {
        cart = new LinkedList<>();
    }

    // Add item to the cart
    public void addItem(String item) {
        cart.add(item);
    }

    // Remove item from the cart
    public void removeItem(String item) {
        cart.remove(item);
    }

    // View all items in the cart
    public void viewCart() {
        System.out.println("Shopping Cart Items:");
        for (String item : cart) {
            System.out.println(item);
        }
    }

    // Get the current cart (for saving to purchase history)
    public LinkedList<String> getCart() {
        return new LinkedList<>(cart);
    }

    // Clear the cart (for checkout)
    public void clearCart() {
        cart.clear();
    }
}

import java.util.Stack;
import java.util.LinkedList;

public class PurchaseHistory {
    private Stack<LinkedList<String>> history;

    public PurchaseHistory() {
        history = new Stack<>();
    }

    // Save the current cart to purchase history
    public void savePurchase(LinkedList<String> cart) {
        history.push(cart);
    }

    // Undo the last purchase
    public LinkedList<String> undoLastPurchase() {
        if (!history.isEmpty()) {
            return history.pop();
        }
        return null;
    }

    // View the entire purchase history
    public void viewHistory() {
        System.out.println("Purchase History:");
        for (LinkedList<String> cart : history) {
            System.out.println(cart);
        }
    }
}

import java.util.LinkedList;
import java.util.Queue;

public class CustomerService {
    private Queue<String> serviceRequests;

    public CustomerService() {
        serviceRequests = new LinkedList<>();
    }

    // Add a customer service request
    public void addRequest(String request) {
        serviceRequests.add(request);
    }

    // Process the next customer service request
    public String processNextRequest() {
        return serviceRequests.poll();
    }

    // View pending customer service requests
    public void viewPendingRequests() {
        System.out.println("Pending Customer Service Requests:");
        for (String request : serviceRequests) {
            System.out.println(request);
        }
    }
}

public class ShoppingApp {
    public static void main(String[] args) {
        ShoppingCart cart = new ShoppingCart();
        PurchaseHistory history = new PurchaseHistory();
        CustomerService service = new CustomerService();

        // Shopping cart operations
        cart.addItem("Laptop");
        cart.addItem("Smartphone");
        cart.viewCart();
        
        // Purchase history operations
        history.savePurchase(cart.getCart());
        cart.clearCart();
        cart.viewCart(); // Should be empty after clearing
        history.viewHistory();

        // Customer service operations
        service.addRequest("Refund for order #1234");
        service.addRequest("Issue with product quality");
        service.viewPendingRequests();
        String processedRequest = service.processNextRequest();
        System.out.println("Processed Request: " + processedRequest);
        service.viewPendingRequests();
    }
}